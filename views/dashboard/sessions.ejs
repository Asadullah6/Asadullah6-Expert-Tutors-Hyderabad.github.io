<%- include('../partials/header') -%>

<div class="sessions-container">
  <div class="page-header">
    <div class="header-content">
      <h1>My Sessions</h1>
      <p>Manage your upcoming and past mentoring sessions</p>
    </div>

    <!-- Quick Stats -->
    <div class="stats-cards">
      <div class="stat-card total-sessions">
        <div class="stat-number"><%= sessions?.length || 0 %></div>
        <div class="stat-label">Total Sessions</div>
      </div>
      <div class="stat-card confirmed-sessions">
        <div class="stat-number">
          <%
            let confirmedCount = 0;
            if (sessions) {
              sessions.forEach(function(s) {
                if (s.status === 'confirmed') confirmedCount++;
              });
            }
          %>
          <%= confirmedCount %>
        </div>
        <div class="stat-label">Confirmed</div>
      </div>
    </div>
  </div>

  <% if (!sessions || sessions.length === 0) { %>
    <!-- Empty State -->
    <div class="empty-state">
      <div class="empty-content">
        <div class="empty-icon">üìö</div>
        <h3>No Sessions Yet</h3>
        <p>You haven't booked any mentoring sessions yet. Start learning from expert mentors today!</p>
        <a href="/mentors" class="btn btn-primary">Find a Mentor</a>
      </div>
    </div>
  <% } else { %>
    <!-- Sessions List -->
    <div class="sessions-list">
      <% sessions.forEach(function(session) { %>
        <%
          // Determine status styling
          let statusClass = 'status-unknown';
          let statusText = session.status || 'unknown';
          
          switch(session.status) {
            case 'pending':
              statusClass = 'status-pending';
              statusText = 'Pending';
              break;
            case 'confirmed':
              statusClass = 'status-confirmed';
              statusText = 'Confirmed';
              break;
            case 'canceled':
              statusClass = 'status-canceled';
              statusText = 'Canceled';
              break;
            case 'completed':
              statusClass = 'status-completed';
              statusText = 'Completed';
              break;
          }
          
          // Format date and time
          let displayDate = 'Not specified';
          let displayTime = 'Not specified';
          
          if (session.date) {
            try {
              let dateObj = new Date(session.date);
              displayDate = dateObj.toLocaleDateString('en-US', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              });
            } catch(e) {
              displayDate = session.date;
            }
          }
          
          if (session.time) {
            displayTime = session.time;
          }
          
          // Determine mentor name
          let mentorName = 'Unknown Mentor';
          if (session.mentor && session.mentor.name) {
            mentorName = session.mentor.name;
          } else if (session.mentorName) {
            mentorName = session.mentorName;
          } else if (session.mentor && typeof session.mentor === 'string') {
            mentorName = session.mentor;
          }
        %>
        
        <div class="session-card">
          <div class="session-header">
            <div class="session-info">
              <h3 class="session-title"><%= session.subject || 'Session Topic Not Specified' %></h3>
              <div class="mentor-info">
                <span class="mentor-label">with</span>
                <span class="mentor-name"><%= mentorName %></span>
              </div>
            </div>
            <div class="session-status <%= statusClass %>">
              <%= statusText %>
            </div>
          </div>

          <div class="session-details">
            <div class="detail-item">
              <div class="detail-icon">üìÖ</div>
              <div class="detail-content">
                <div class="detail-label">Date & Time</div>
                <div class="detail-value"><%= displayDate %></div>
                <div class="detail-sub">at <%= displayTime %></div>
              </div>
            </div>

            <% if (session.duration) { %>
              <div class="detail-item">
                <div class="detail-icon">‚è±Ô∏è</div>
                <div class="detail-content">
                  <div class="detail-label">Duration</div>
                  <div class="detail-value"><%= session.duration %> minutes</div>
                </div>
              </div>
            <% } %>

            <% if (session.mentor && session.mentor.hourlyRate) { %>
              <div class="detail-item">
                <div class="detail-icon">üí∞</div>
                <div class="detail-content">
                  <div class="detail-label">Rate</div>
                  <div class="detail-value">PKR <%= session.mentor.hourlyRate %>/hr</div>
                </div>
              </div>
            <% } %>
          </div>

          <% if (session.notes && session.notes.trim()) { %>
            <div class="session-notes">
              <div class="notes-label">Notes</div>
              <div class="notes-content"><%= session.notes %></div>
            </div>
          <% } %>

          <!-- Action Buttons -->
          <div class="session-actions">
            <% if (session.status === 'pending') { %>
              <a href="/session/edit/<%= session._id %>" class="btn btn-edit">Edit Session</a>
              <a href="/session/delete/<%= session._id %>" 
                 onclick="return confirm('Are you sure you want to delete this session?')" 
                 class="btn btn-delete">Delete Session</a>
            <% } else if (session.status === 'confirmed') { %>
              <div class="confirmation-message">
                <div class="confirm-icon">‚úÖ</div>
                <div class="confirm-text">
                  <strong>Session Confirmed</strong>
                  <p>Your mentor will contact you with meeting details before the session.</p>
                </div>
              </div>
            <% } %>
          </div>
        </div>
      <% }); %>
    </div>
  <% } %>

  <!-- Navigation -->
  <div class="page-navigation">
    <a href="/dashboard/student" class="nav-btn nav-back">‚Üê Back to Dashboard</a>
    <a href="/mentors" class="nav-btn nav-primary">Book New Session</a>
  </div>
</div>

<style>
.sessions-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1.5rem;
  background-color: #f8f9fa;
  min-height: 100vh;
}

.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 3rem;
  flex-wrap: wrap;
  gap: 2rem;
}

.header-content h1 {
  color: #2d3436;
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0;
}

.header-content p {
  color: #636e72;
  font-size: 1.1rem;
  margin: 0.5rem 0 0 0;
}

.stats-cards {
  display: flex;
  gap: 1rem;
}

.stat-card {
  padding: 1rem 1.5rem;
  border-radius: 12px;
  text-align: center;
  min-width: 120px;
  color: white;
}

.stat-card.total-sessions {
  background: linear-gradient(135deg, #74b9ff, #0984e3);
}

.stat-card.confirmed-sessions {
  background: linear-gradient(135deg, #00b894, #00a085);
}

.stat-number {
  font-size: 1.5rem;
  font-weight: 700;
  margin-bottom: 0.25rem;
}

.stat-label {
  font-size: 0.8rem;
  opacity: 0.9;
}

.empty-state {
  text-align: center;
  padding: 4rem 2rem;
}

.empty-content {
  background: white;
  border-radius: 20px;
  padding: 3rem;
  box-shadow: 0 4px 30px rgba(0,0,0,0.08);
  max-width: 500px;
  margin: 0 auto;
}

.empty-icon {
  font-size: 4rem;
  margin-bottom: 1rem;
}

.empty-content h3 {
  color: #2d3436;
  font-size: 1.8rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

.empty-content p {
  color: #636e72;
  font-size: 1.1rem;
  margin-bottom: 2rem;
  line-height: 1.6;
}

.sessions-list {
  display: grid;
  gap: 2rem;
  margin-bottom: 3rem;
}

.session-card {
  background: white;
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 4px 20px rgba(0,0,0,0.08);
  transition: all 0.3s ease;
}

.session-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 30px rgba(0,0,0,0.12);
}

.session-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.session-info {
  flex: 1;
}

.session-title {
  color: #2d3436;
  font-size: 1.4rem;
  font-weight: 600;
  margin: 0 0 0.75rem 0;
}

.mentor-info {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.mentor-label {
  color: #636e72;
  font-size: 0.9rem;
}

.mentor-name {
  background: linear-gradient(135deg, #6c5ce7, #a55eea);
  color: white;
  padding: 0.3rem 0.8rem;
  border-radius: 15px;
  font-size: 0.85rem;
  font-weight: 600;
}

.session-status {
  padding: 0.6rem 1rem;
  border-radius: 25px;
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-pending {
  background: rgba(243, 156, 18, 0.1);
  color: #f39c12;
}

.status-confirmed {
  background: rgba(0, 184, 148, 0.1);
  color: #00b894;
}

.status-canceled {
  background: rgba(231, 76, 60, 0.1);
  color: #e74c3c;
}

.status-completed {
  background: rgba(108, 92, 231, 0.1);
  color: #6c5ce7;
}

.session-details {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.detail-item {
  display: flex;
  gap: 1rem;
  align-items: flex-start;
  background: #f8f9fa;
  padding: 1rem;
  border-radius: 10px;
}

.detail-icon {
  font-size: 1.2rem;
  flex-shrink: 0;
}

.detail-content {
  flex: 1;
}

.detail-label {
  color: #636e72;
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 0.5rem;
}

.detail-value {
  color: #2d3436;
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.detail-sub {
  color: #636e72;
  font-size: 0.9rem;
}

.session-notes {
  background: #f0f2ff;
  border: 1px solid #e3e8ff;
  padding: 1rem;
  border-radius: 10px;
  margin-bottom: 1.5rem;
}

.notes-label {
  color: #636e72;
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 0.5rem;
}

.notes-content {
  color: #2d3436;
  line-height: 1.5;
}

.session-actions {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  align-items: center;
}

.confirmation-message {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  background: rgba(0, 184, 148, 0.1);
  border: 1px solid rgba(0, 184, 148, 0.3);
  padding: 1rem;
  border-radius: 10px;
  flex: 1;
}

.confirm-icon {
  font-size: 1.5rem;
  flex-shrink: 0;
}

.confirm-text strong {
  color: #00b894;
  display: block;
  margin-bottom: 0.5rem;
}

.confirm-text p {
  color: #636e72;
  font-size: 0.9rem;
  margin: 0;
}

.btn {
  padding: 0.8rem 1.5rem;
  border-radius: 25px;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  border: none;
  display: inline-block;
  text-align: center;
}

.btn-primary {
  background: linear-gradient(135deg, #6c5ce7, #a55eea);
  color: white;
  box-shadow: 0 4px 20px rgba(108, 92, 231, 0.3);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(108, 92, 231, 0.4);
}

.btn-edit {
  background: linear-gradient(135deg, #fdcb6e, #e17055);
  color: white;
  box-shadow: 0 3px 15px rgba(253, 203, 110, 0.3);
}

.btn-edit:hover {
  transform: translateY(-2px);
  box-shadow: 0 5px 20px rgba(253, 203, 110, 0.4);
}

.btn-delete {
  background: linear-gradient(135deg, #e17055, #d63031);
  color: white;
  box-shadow: 0 3px 15px rgba(225, 112, 85, 0.3);
}

.btn-delete:hover {
  transform: translateY(-2px);
  box-shadow: 0 5px 20px rgba(225, 112, 85, 0.4);
}

.page-navigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 3rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.nav-btn {
  padding: 0.8rem 1.5rem;
  border-radius: 25px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

.nav-back {
  color: #74b9ff;
  border: 2px solid #74b9ff;
  background: transparent;
}

.nav-back:hover {
  background: #74b9ff;
  color: white;
}

.nav-primary {
  background: linear-gradient(135deg, #6c5ce7, #a55eea);
  color: white;
  box-shadow: 0 4px 15px rgba(108, 92, 231, 0.3);
}

.nav-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(108, 92, 231, 0.4);
}

/* Responsive Design */
@media (max-width: 768px) {
  .sessions-container {
    padding: 1rem;
  }
  
  .page-header {
    flex-direction: column;
    align-items: stretch;
    text-align: center;
  }
  
  .header-content h1 {
    font-size: 2rem;
  }
  
  .stats-cards {
    justify-content: center;
  }
  
  .session-details {
    grid-template-columns: 1fr;
  }
  
  .session-actions {
    flex-direction: column;
  }
  
  .page-navigation {
    flex-direction: column;
    text-align: center;
  }
}

@media (max-width: 480px) {
  .header-content h1 {
    font-size: 1.8rem;
  }
  
  .session-card {
    padding: 1.5rem;
  }
  
  .session-header {
    flex-direction: column;
    align-items: stretch;
  }
  
  .session-status {
    text-align: center;
  }
}
</style>

<%- include('../partials/footer') -%>