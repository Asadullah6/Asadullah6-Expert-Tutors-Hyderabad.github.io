<%- include('../partials/header') -%>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    color: #333;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1.5rem;
  }

  .dashboard-header {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
    text-align: center;
  }

  .welcome-text {
    font-size: 2.5rem;
    font-weight: 700;
    color: #333;
    margin-bottom: 0.5rem;
    background: linear-gradient(135deg, #4a00e0, #8e44ad);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .subtitle {
    color: #666;
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
  }

  .student-avatar {
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, #4a00e0, #8e44ad);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1rem;
    color: white;
    font-size: 2rem;
    font-weight: 700;
  }

  .dashboard-actions {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .action-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .action-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #4a00e0, #8e44ad);
  }

  .action-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 40px rgba(0,0,0,0.15);
  }

  .action-icon {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #4a00e0, #8e44ad);
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  .action-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 0.5rem;
  }

  .action-description {
    color: #666;
    font-size: 1rem;
    line-height: 1.5;
    margin-bottom: 1.5rem;
  }

  .action-btn {
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #4a00e0, #8e44ad);
    color: white;
    text-decoration: none;
    border-radius: 50px;
    display: inline-flex;
    align-items: center;
    gap: 0.8rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(74, 0, 224, 0.3);
    width: 100%;
    justify-content: center;
  }

  .action-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(74, 0, 224, 0.4);
  }

  .action-btn.secondary {
    background: linear-gradient(135deg, #667eea, #764ba2);
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  }

  .action-btn.secondary:hover {
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
  }

  .stats-section {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
  }

  .stats-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .stat-item {
    text-align: center;
    padding: 1.5rem;
    background: rgba(74, 0, 224, 0.05);
    border-radius: 15px;
    border: 1px solid rgba(74, 0, 224, 0.1);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: #4a00e0;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: #666;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .quick-tips {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
  }

  .tips-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .tips-list {
    list-style: none;
    padding: 0;
  }

  .tips-list li {
    padding: 0.8rem;
    margin-bottom: 0.5rem;
    background: rgba(74, 0, 224, 0.05);
    border-radius: 10px;
    border-left: 3px solid #4a00e0;
    display: flex;
    align-items: flex-start;
    gap: 0.8rem;
  }

  .tip-icon {
    background: #4a00e0;
    color: white;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    font-weight: 600;
    flex-shrink: 0;
    margin-top: 0.1rem;
  }

  .recent-activity {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
  }

  .activity-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
    margin-bottom: 1rem;
  }

  .activity-item {
    padding: 1rem;
    border-left: 3px solid #4a00e0;
    background: rgba(74, 0, 224, 0.05);
    margin-bottom: 1rem;
    border-radius: 0 10px 10px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .activity-content {
    flex: 1;
  }

  .activity-time {
    color: #666;
    font-size: 0.9rem;
    margin-left: 1rem;
  }

  .empty-state {
    text-align: center;
    color: #999;
    font-style: italic;
    padding: 2rem;
  }

  .floating-help {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #4a00e0, #8e44ad);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    box-shadow: 0 8px 25px rgba(74, 0, 224, 0.4);
    transition: all 0.3s ease;
    z-index: 1000;
  }

  .floating-help:hover {
    transform: scale(1.1);
    box-shadow: 0 12px 35px rgba(74, 0, 224, 0.5);
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem;
    }
    
    .dashboard-header {
      padding: 1.5rem;
    }
    
    .welcome-text {
      font-size: 2rem;
    }
    
    .dashboard-actions {
      grid-template-columns: 1fr;
    }
    
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .floating-help {
      bottom: 1rem;
      right: 1rem;
      width: 50px;
      height: 50px;
      font-size: 1.2rem;
    }
  }
</style>

<div class="container">
  <div class="dashboard-header">
    <div class="student-avatar">
      <%= user.name.charAt(0).toUpperCase() %>
    </div>
    <h1 class="welcome-text">Student Dashboard</h1>
    <p class="subtitle">Welcome, <strong><%= user.name %></strong>! Ready to start learning today?</p>
  </div>

  <div class="dashboard-actions">
    <div class="action-card">
      <div class="action-icon">
        üîç
      </div>
      <h3 class="action-title">Find a Tutor</h3>
      <p class="action-description">
        Browse through our network of expert tutors across various subjects. Find the perfect match for your learning needs.
      </p>
      <a href="/mentors" class="action-btn">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
          <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
        </svg>
        Find a Tutor
      </a>
    </div>

    <div class="action-card">
      <div class="action-icon">
        üìÖ
      </div>
      <h3 class="action-title">My Sessions</h3>
      <p class="action-description">
        View and manage all your tutoring sessions. Track your progress and upcoming appointments in one place.
      </p>
      <a href="/sessions" class="action-btn secondary">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
          <path d="M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4V.5zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2z"/>
        </svg>
        My Sessions
      </a>
    </div>
  </div>

  <div class="stats-section">
    <h2 class="stats-title">Your Learning Progress</h2>
    <div class="stats-grid">
      <div class="stat-item">
        <div class="stat-number"><%= (sessions || []).length %></div>
        <div class="stat-label">Total Sessions</div>
      </div>
      <div class="stat-item">
        <div class="stat-number"><%= (sessions || []).filter(s => s.status === 'completed').length %></div>
        <div class="stat-label">Completed Sessions</div>
      </div>
      <div class="stat-item">
        <div class="stat-number"><%= (sessions || []).filter(s => s.status === 'upcoming' || s.status === 'confirmed').length %></div>
        <div class="stat-label">Upcoming Sessions</div>
      </div>
      <div class="stat-item">
        <div class="stat-number">
          <% 
            const uniqueTutors = (sessions || [])
              .map(s => s.mentor || s.mentorId)
              .filter((value, index, self) => value && self.indexOf(value) === index);
          %>
          <%= uniqueTutors.length %>
        </div>
        <div class="stat-label">Different Tutors</div>
      </div>
    </div>
  </div>

  <div class="quick-tips">
    <h2 class="tips-title">
      üí° Quick Tips for Success
    </h2>
    <ul class="tips-list">
      <li>
        <div class="tip-icon">1</div>
        <div>
          <strong>Come prepared:</strong> Have specific questions and topics ready before your session starts.
        </div>
      </li>
      <li>
        <div class="tip-icon">2</div>
        <div>
          <strong>Set clear goals:</strong> Define what you want to achieve in each tutoring session.
        </div>
      </li>
      <li>
        <div class="tip-icon">3</div>
        <div>
          <strong>Practice regularly:</strong> Apply what you learn between sessions for better retention.
        </div>
      </li>
      <li>
        <div class="tip-icon">4</div>
        <div>
          <strong>Ask questions:</strong> Don't hesitate to ask for clarification or additional examples.
        </div>
      </li>
      <li>
        <div class="tip-icon">5</div>
        <div>
          <strong>Give feedback:</strong> Help your tutor understand your learning style and preferences.
        </div>
      </li>
    </ul>
  </div>

  <div class="recent-activity">
    <h2 class="activity-title">Recent Activity</h2>
    <% if (sessions && sessions.length > 0) { %>
      <% sessions.slice(0, 4).reverse().forEach(session => { %>
        <div class="activity-item">
          <div class="activity-content">
            <strong>
              <% if (session.status === 'completed') { %>
                Session completed
              <% } else if (session.status === 'confirmed' || session.status === 'upcoming') { %>
                Session scheduled
              <% } else if (session.status === 'pending') { %>
                Session requested
              <% } else { %>
                Session update
              <% } %>
            </strong>
            <% if (session.mentor && session.mentor.name) { %>
              with <%= session.mentor.name %>
            <% } else if (session.mentorName) { %>
              with <%= session.mentorName %>
            <% } else { %>
              with Unknown Mentor
            <% } %>
            <% if (session.subject) { %>
              - <%= session.subject %>
            <% } %>
          </div>
          <div class="activity-time">
            <% if (session.sessionDate) { %>
              <%= new Date(session.sessionDate).toLocaleDateString() %>
            <% } else if (session.createdAt) { %>
              <%= new Date(session.createdAt).toLocaleDateString() %>
            <% } else { %>
              Recently
            <% } %>
          </div>
        </div>
      <% }) %>
    <% } else { %>
      <div class="empty-state">
        No activity yet. Start by finding a tutor and booking your first session!
      </div>
    <% } %>
  </div>
</div>

<div class="floating-help" onclick="showHelp()">
  ‚ùì
</div>

<script>
  function showHelp() {
    alert('Need help? Contact our support team or check out our FAQ section. We\'re here to make your learning journey smooth!');
    // You can replace this with a proper modal or help system
  }

  // Add some interactivity
  document.querySelectorAll('.action-card').forEach(card => {
    card.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-8px) scale(1.02)';
    });
    
    card.addEventListener('mouseleave', function() {
      this.style.transform = 'translateY(0) scale(1)';
    });
  });

  // Add click tracking for analytics (optional)
  document.querySelectorAll('.action-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const action = this.textContent.trim();
      console.log('Student clicked:', action);
      // You can send this data to your analytics service
    });
  });

  // Animate stats on page load
  window.addEventListener('load', function() {
    const statNumbers = document.querySelectorAll('.stat-number');
    statNumbers.forEach((stat, index) => {
      const finalValue = parseInt(stat.textContent);
      let currentValue = 0;
      const increment = Math.ceil(finalValue / 20);
      
      const counter = setInterval(() => {
        currentValue += increment;
        if (currentValue >= finalValue) {
          currentValue = finalValue;
          clearInterval(counter);
        }
        stat.textContent = currentValue;
      }, 50 + (index * 20)); // Stagger the animations
    });
  });
</script>

<%- include('../partials/footer') -%>